@model IEnumerable<AttenceProject.Models.SysOverTime>

@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/icon.css" rel="stylesheet" />
    <link href="~/Content/wu.css" rel="stylesheet" />
    <script src="~/easyui/jquery.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/easyui/jquery.easyui.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/scripts/easyui-lang-zh_CN.js"></script>
    <link href="~/zTree_v3/css/demo.css" rel="stylesheet" />
    <link href="~/zTree_v3/css/zTreeStyle/img/zTreeStyle.css" rel="stylesheet" />
    <script src="~/zTree_v3/js/jquery.ztree.core.js"></script>
    <script type="text/javascript" src="~/zTree_v3/js/jquery.ztree.excheck.js"></script>
    <script type="text/javascript" src="~/zTree_v3/js/jquery.ztree.exedit.js"></script>
    <link rel="stylesheet" type="text/css" href="~/easyui/themes/default/easyui.css" />

</head>
<body>

    @{
        HttpCookie cook = Request.Cookies["userinfo"];

    }
    <script>
        var setting = {
            data: {
                simpleData: {
                    enable: true
                }
            },
            edit: {
                drag: {
                    autoExpandTrigger: true,
                    prev: dropPrev,
                    inner: dropInner,
                    next: dropNext
                },
                enable: true,
                showRemoveBtn: false,
                showRenameBtn: false
            },
            callback: {
                beforeDrag: beforeDrag,
                beforeDrop: beforeDrop,
                beforeDragOpen: beforeDragOpen,
                onDrag: onDrag,
                onDrop: onDrop,
                onExpand: onExpand
            }
        };
     
        function dropPrev(treeId, nodes, targetNode) {
            var pNode = targetNode.getParentNode();
            if (pNode && pNode.dropInner === false) {
                return false;
            } else {
                for (var i = 0, l = curDragNodes.length; i < l; i++) {
                    var curPNode = curDragNodes[i].getParentNode();
                    if (curPNode && curPNode !== targetNode.getParentNode() && curPNode.childOuter === false) {
                        return false;
                    }
                }
            }
            return true;
        }
        function dropInner(treeId, nodes, targetNode) {
            if (targetNode && targetNode.dropInner === false) {
                return false;
            } else {
                for (var i = 0, l = curDragNodes.length; i < l; i++) {
                    if (!targetNode && curDragNodes[i].dropRoot === false) {
                        return false;
                    } else if (curDragNodes[i].parentTId && curDragNodes[i].getParentNode() !== targetNode && curDragNodes[i].getParentNode().childOuter === false) {
                        return false;
                    }
                }
            }
            return true;
        }
        function dropNext(treeId, nodes, targetNode) {
            var pNode = targetNode.getParentNode();
            if (pNode && pNode.dropInner === false) {
                return false;
            } else {
                for (var i = 0, l = curDragNodes.length; i < l; i++) {
                    var curPNode = curDragNodes[i].getParentNode();
                    if (curPNode && curPNode !== targetNode.getParentNode() && curPNode.childOuter === false) {
                        return false;
                    }
                }
            }
            return true;
        }

        var log, className = "dark", curDragNodes, autoExpandNode;
        function beforeDrag(treeId, treeNodes) {
            className = (className === "dark" ? "" : "dark");
            for (var i = 0, l = treeNodes.length; i < l; i++) {
                if (treeNodes[i].drag === false) {
                    curDragNodes = null;
                    return false;
                } else if (treeNodes[i].parentTId && treeNodes[i].getParentNode().childDrag === false) {
                    curDragNodes = null;
                    return false;
                }
            }
            curDragNodes = treeNodes;
            return true;
        }
        function beforeDragOpen(treeId, treeNode) {
            autoExpandNode = treeNode;
            return true;
        }
        function beforeDrop(treeId, treeNodes, targetNode, moveType, isCopy) {
            className = (className === "dark" ? "" : "dark");
            return true;
        }
        function onDrag(event, treeId, treeNodes) {
            className = (className === "dark" ? "" : "dark");
        }
        function onDrop(event, treeId, treeNodes, targetNode, moveType, isCopy) {
            className = (className === "dark" ? "" : "dark");
        }
        function onExpand(event, treeId, treeNode) {
            if (treeNode === autoExpandNode) {
                className = (className === "dark" ? "" : "dark");
            }
        }

        function getTime() {
            var now = new Date(),
			h = now.getHours(),
			m = now.getMinutes(),
			s = now.getSeconds(),
			ms = now.getMilliseconds();
            return (h + ":" + m + ":" + s + " " + ms);
        }

        function setTrigger() {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo");
            zTree.setting.edit.drag.autoExpandTrigger = $("#callbackTrigger").attr("checked");
        }
        
        $(function () {

            //日期控制扩展选择日期大于等于当前日期，开始日期小于等于结束日期
            $("#StartTime").datebox('calendar').calendar({ 
                validator: function (beginDate) {
                    var date = new Date();
                    var enddate = $("#EndTime").datebox("getValue");
                    //alert(enddate);
                    if (enddate != "") {
                        enddate = 01 / 01 / 9999;
                    }
                    return beginDate >= date && beginDate <= enddate;
                }
            });
            $("#EndTime").datebox({
                onSelect: function (beginDate) {
                    $('#EndTime').datebox().datebox('calendar').calendar({
                        validator: function (endDate) {
                            var date = new Date();
                            return beginDate <= endDate && endDate > date;
                        }
                    });
                }
            });
        });
        function saveOverTime() {
            //debugger;
            var treeObj = $.fn.zTree.getZTreeObj("treeDemo2");
            var treeObj_CopyFor = $.fn.zTree.getZTreeObj("treeDemo3");
            var nodes = treeObj.getNodes();
            var nodes_CopyFor = treeObj_CopyFor.getCheckedNodes(true)

            var list = "";
            var list_CopyFor = "";
            for (var i = 0; i < nodes.length; i++) {
                list += nodes[i].id + '_';
            }
            $("#SendFor").val(list);
            for (var i = 0; i < nodes_CopyFor.length; i++) {
                list_CopyFor += nodes_CopyFor[i].id + '_';
            }
            $("#CopyFor").val(list_CopyFor);
            document.form1.submit();
        }
        function setCheck() {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo3"),
			py = $("#py").attr("checked") ? "p" : "",
			sy = $("#sy").attr("checked") ? "s" : "",
			pn = $("#pn").attr("checked") ? "p" : "",
			sn = $("#sn").attr("checked") ? "s" : "",
			type = { "Y": py + sy, "N": pn + sn };
            zTree.setting.check.chkboxType = type;
            //showCode('setting.check.chkboxType = { "Y" : "' + type.Y + '", "N" : "' + type.N + '" };');
        }
        var setting2 = {
            check: {
                enable: true
            },
            data: {
                simpleData: {
                    enable: true
                }
            }
        };
        $(document).ready(function () {

            var zNodes;
            $.ajax({
                url: "../../SysDepts/GetGeneralDeptJson", success: function (result) {
                    //alert(result);
                    zNodes = JSON.parse(result);
                    $.fn.zTree.init($("#treeDemo"), setting, zNodes);
                    $.fn.zTree.init($("#treeDemo2"), setting);
                    $.fn.zTree.init($("#treeDemo3"), setting2, zNodes);
                    setCheck();
                    $("#callbackTrigger").bind("change", {}, setTrigger);

                }
            });

        });

    </script>
    <script type="text/javascript">

    </script>
    <!-- Begin of easyui-dialog -->
    <div data-options="closed:false,iconCls:'icon-save'" style="width:600px; padding:10px;">
        <div class="easyui-panel" title="加班申请发起">
            <form id="wu-form" method="post" name="form1" style="margin:3%;" action="~/SysOverTimes/SaveAdd">
                <table style="">
                    <tr style="display:none">
                        <td width="100" align="right">ID:</td>
                        <td><input type="text" name="ID" class="wu-text" value="@cook.Values["UserID"]" /></td>
                    </tr>
                    <tr>
                        <td width="100" align="right">加班人姓名:</td>
                        <td><input type="text" name="UserName" class="wu-text" value="@cook.Values["UserName"]" /></td>
                    </tr>
                    <tr>
                        <td width="100" align="right">工号:</td>
                        <td><input type="text" name="UserCode" class="wu-text" value="@cook.Values["UserCode"]" /></td>
                    </tr>
                    <tr>
                        <td width="100" align="right">加班原因:</td>
                        <td><input type="text" name="OverTimeReason" class="wu-text" /></td>
                    </tr>
                    <tr>
                        <td width="100" align="right">加班类型:</td>
                        <td>
                            <select class="easyui-combobox" panelHeight="auto" style="width:100px" id="OverTimeType" name="OverTimeType" data-options="required:true,
                   url:'../../SysOverTimes/GetOverTimeType',
                   method:'get',
                   multiple:false,
                   valueField:'ID',
                   textField:'AlternativeText'
                           "></select>
                        </td>
                    </tr>
                    <tr>
                        <td width="100" align="right">加班结算类型:</td>
                        <td>
                            <select class="easyui-combobox" panelHeight="auto" style="width:100px" id="Account_Method" name="Account_Method" data-options="required:true,
                   url:'../../SysOverTimes/GetAccountMethod',
                   method:'get',
                   multiple:false,
                   valueField:'ID',
                   textField:'AlternativeText'
                           "></select>
                        </td>
                    </tr>
                    <tr>
                        <td width="100" align="right">加班开始时间:</td>
                        <td>
                            <input class="easyui-datetimebox" value="" name="StartTime" id="StartTime" style="width:200px">
                        </td>
                    </tr>
                    <tr>
                        <td width="100" align="right">加班结束时间:</td>
                        <td>
                            <input class="easyui-datetimebox" value="" name="EndTime" id="EndTime" style="width:200px">
                        </td>
                    </tr>
                    <tr style="display:none">
                        <td width="100" align="right">审批人流:</td>
                        <td>
                            <input type="text" value="" name="SendFor" id="SendFor" style="display:none" />
                        </td>
                    </tr>
                    <tr style="display:none">
                        <td width="100" align="right">抄送人流:</td>
                        <td>
                            <input type="text" name="CopyFor" id="CopyFor" style="display:none" />
                        </td>
                    </tr>
                </table>
            </form>
            <div id="SendForTree" style="height:190px; margin:3%">
                <div style="margin-left:5%">选择审批人（将左侧员工向右侧拖入，可规定右侧顺序，规定审批顺序）：</div>
                <div class="zTreeDemoBackground left" style="float:left;height:190px">

                    <ul id="treeDemo" class="ztree" style="height:150px"></ul>
                </div>
                <div class="right" style="height:80px;float:left;">
                    <ul id="treeDemo2" class="ztree" style="height:150px"></ul>
                </div>
            </div>
            <div style="height:10px;">&nbsp;</div>
            <div id="SendForTree" style="height:190px; float:left; margin:3%;">
                <div style="margin-left:10%">选择抄送人：</div>
                <div class="zTreeDemoBackground left" style="float:left;height:190px">

                    <ul id="treeDemo3" class="ztree" style="height:150px"></ul>
                </div>
            </div>

            <div style="width:85%;">
                <a href="#" class="easyui-linkbutton" onclick="saveOverTime()" data-options="iconCls:'icon-ok'" style="padding:2px 0px;width:70%; margin:3%;margin-left:24%">
                    提交申请
                </a>
            </div>
        </div> 
    </div>
    <!-- End of easyui-dialog -->

</body>
</html>
